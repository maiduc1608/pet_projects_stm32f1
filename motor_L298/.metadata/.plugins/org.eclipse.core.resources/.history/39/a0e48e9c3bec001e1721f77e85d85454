/**
 ******************************************************************************
 * @file           : main.c
 * @author         : Auto-generated by STM32CubeIDE
 * @brief          : Main program body
 ******************************************************************************
 * @attention
 *
 * Copyright (c) 2024 STMicroelectronics.
 * All rights reserved.
 *
 * This software is licensed under terms that can be found in the LICENSE file
 * in the root directory of this software component.
 * If no LICENSE file comes with this software, it is provided AS-IS.
 *
 ******************************************************************************
 */

#include <stdint.h>

//#if !defined(__SOFT_FP__) && defined(__ARM_FP)
//  #warning "FPU is not initialized, but the project is compiling for an FPU. Please initialize the FPU before use."
//#endif
uint32_t *RCC_APB2ENR = (uint32_t*)0x40021018;
uint32_t *GPIOA_CRL = (uint32_t*)0x40010800;

uint32_t *AFIO_MAPR = (uint32_t*)0x40010004;

//uint32_t *TIM2 = (uint32_t*)0x40000000;
uint32_t *TIM2_ARR = (uint32_t*)0x4000002c;
uint32_t *TIM2_CCR2 = (uint32_t*)0x40000038;
uint32_t *TIM2_CNT = (uint32_t*)0x40000024;
uint32_t *TIM2_PSC = (uint32_t*)0x40000028;
uint32_t *TIM2_CR1 = (uint32_t*)0x40000000;
uint32_t *TIM2_CCER = (uint32_t*)0x40000020;
uint32_t *TIM2_CCMR1 = (uint32_t*)0x40000018;

void setDutyCircle(uint16_t dutyCircle){
	*TIM2_CCR2 = dutyCircle;

}
void delay(uint32_t d){
	for(int i=0;i<d*100;i++);
}
int main(void)
{
	// enable clock for GPIOA
	*RCC_APB2ENR |= 0x04;

	//configure PA1 to output
	*GPIOA_CRL &= 0x44444404;
	*GPIOA_CRL |= 0x444444A4;

	// configure AFIO to TIM2

	*AFIO_MAPR &= 0x00000000; //PA1
//	*AFIO_MAPR |= 0x000;

	//configure PWM
	*TIM2_ARR = 1000-1;
	*TIM2_PSC = 72-1;
	*TIM2_CCER = 0x01;

	//PWM mode 1
	*TIM2_CCMR1 &= ~0x0000;
	*TIM2_CCMR1 = 0x0060;
	*TIM2_CR1 |= 0x301;
	setDutyCircle(500);

	while(1){
//		int i=0;
//		for(i=0;i<500;i++){
//			delay(100);
//		}
	}
}
