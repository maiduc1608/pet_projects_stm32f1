#include<stdint.h>

//configure registers
uint32_t *RCC_APB2ENR = (uint32_t*)0x40021018;
uint32_t *RCC_APB1ENR = (uint32_t*)0x4002101c;
uint32_t *RCC_CR = (uint32_t*)0x40021000;

//select output
uint32_t *GPIOA_CRL = (uint32_t*)0x40010800;
//uint32_t *AFIO_MAPR = (uint32_t*)0x40010004;
uint32_t *GPIOA_ODR = (uint32_t*)0x4001080c;
uint32_t *GPIOA_IDR = (uint32_t*)0x40010808;

uint32_t *TIM3_CR1 = (uint32_t*)0x40000400;
uint32_t *TIM3_PSC = (uint32_t*)0x40000428;
uint32_t *TIM3_ARR = (uint32_t*)0x4000042c;
uint32_t *TIM3_CCMR1 = (uint32_t*)0x40000418;
uint32_t *TIM3_CCER = (uint32_t*)0x40000420;
uint32_t *TIM3_EGR = (uint32_t*)0x40000414;
uint32_t *TIM3_CCR1 = (uint32_t*)0x40000434;

void delay(uint32_t d){
		for(int i=0; i<d*2000;i++);
	}

	void setDutyCircle(uint32_t duty){
		*TIM3_CCR1 = ((*TIM3_ARR)*duty)/100;
	}

int main(void){
	//supply clock for GPIOA
	*RCC_APB2ENR |= 0x04;
	//supply clock for TIM3
	*RCC_APB1ENR |= 0x02;

	//configure output.
	*GPIOA_CRL &= 0x4A444464;
	*GPIOA_CRL |= 0x4A444464;
	*GPIOA_ODR &= 0x40;
	*GPIOA_ODR |= 0x40;

	//
	*RCC_CR |= 0x00000001;

	//configure PWM.
	*TIM3_PSC = 72-1;
	*TIM3_ARR = 1000-1;
	*TIM3_CCMR1 &= 0x0068;
	*TIM3_CCMR1 |= 0x068;

	*TIM3_CR1 &= 0x01;
	*TIM3_CR1 |= 0x01;

	*TIM3_EGR |=0x01;
	*TIM3_CCER |= 0x01;

	uint32_t speed=0;
	uint32_t checkPress=0;
	uint32_t preCheckPress=1;
	uint32_t pinA_value;
	uint32_t check = 0x00000010;
//	*TIM3_CR1 |= 0x01;


	while(1){
		pinA_value = (*GPIOA_IDR);
		if((pinA_value&check)==(0x00000010)) {
			checkPress=1;
			if(preCheckPress==0) {
				speed++;
				if(speed==5) speed=1;
				setDutyCircle(speed*25);
				delay(100);
			}
		}
		else checkPress = 0;
		preCheckPress = checkPress;
	}

}
